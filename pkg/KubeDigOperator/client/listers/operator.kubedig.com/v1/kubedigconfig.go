// SPDX-License-Identifier: Apache-2.0
// Copyright 2023 Authors of KubeDig

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/zfz-725/KubeDig/pkg/KubeDigOperator/api/operator.kubedig.com/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KubeDigConfigLister helps list KubeDigConfigs.
// All objects returned here must be treated as read-only.
type KubeDigConfigLister interface {
	// List lists all KubeDigConfigs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.KubeDigConfig, err error)
	// KubeDigConfigs returns an object that can list and get KubeDigConfigs.
	KubeDigConfigs(namespace string) KubeDigConfigNamespaceLister
	KubeDigConfigListerExpansion
}

// kubeDigConfigLister implements the KubeDigConfigLister interface.
type kubeDigConfigLister struct {
	indexer cache.Indexer
}

// NewKubeDigConfigLister returns a new KubeDigConfigLister.
func NewKubeDigConfigLister(indexer cache.Indexer) KubeDigConfigLister {
	return &kubeDigConfigLister{indexer: indexer}
}

// List lists all KubeDigConfigs in the indexer.
func (s *kubeDigConfigLister) List(selector labels.Selector) (ret []*v1.KubeDigConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.KubeDigConfig))
	})
	return ret, err
}

// KubeDigConfigs returns an object that can list and get KubeDigConfigs.
func (s *kubeDigConfigLister) KubeDigConfigs(namespace string) KubeDigConfigNamespaceLister {
	return kubeDigConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KubeDigConfigNamespaceLister helps list and get KubeDigConfigs.
// All objects returned here must be treated as read-only.
type KubeDigConfigNamespaceLister interface {
	// List lists all KubeDigConfigs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.KubeDigConfig, err error)
	// Get retrieves the KubeDigConfig from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.KubeDigConfig, error)
	KubeDigConfigNamespaceListerExpansion
}

// kubeDigConfigNamespaceLister implements the KubeDigConfigNamespaceLister
// interface.
type kubeDigConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KubeDigConfigs in the indexer for a given namespace.
func (s kubeDigConfigNamespaceLister) List(selector labels.Selector) (ret []*v1.KubeDigConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.KubeDigConfig))
	})
	return ret, err
}

// Get retrieves the KubeDigConfig from the indexer for a given namespace and name.
func (s kubeDigConfigNamespaceLister) Get(name string) (*v1.KubeDigConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("kubedigconfig"), name)
	}
	return obj.(*v1.KubeDigConfig), nil
}
