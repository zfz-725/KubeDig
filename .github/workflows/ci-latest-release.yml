name: ci-latest-release

on:
  push:
    branches:
      - "main"
      - "v*"
    paths:
      - "KubeDig/**"
      - "protobuf/**"
      - ".github/workflows/ci-latest-release.yml"
      - "pkg/**"
      - "!STABLE-RELEASE"

  create:
    branches:
      - "v*"

# Declare default permissions as read only.
permissions: read-all

jobs:
  check:
    name: Check what pkg were updated
    if: github.repository == 'kubedig/kubedig'
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    outputs:
      kubedig: ${{ steps.filter.outputs.kubedig}}
      controller: ${{ steps.filter.outputs.controller }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          kubedig:
            - "KubeDig/**"
            - "protobuf/**"
          controller:
            - 'pkg/KubeDigController/**'

  build:
    name: Create KubeDig latest release
    needs: check
    if: github.repository == 'kubedig/kubedig' && (needs.check.outputs.kubedig == 'true' || ${{ github.ref }} != 'refs/heads/main')
    runs-on: ubuntu-latest-16-cores
    permissions:
      id-token: write
    timeout-minutes: 150
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'KubeDig/go.mod'
      - name: Install the latest LLVM toolchain
        run: ./.github/workflows/install-llvm.sh

      - name: Compile libbpf
        run: ./.github/workflows/install-libbpf.sh

      - name: Get release tag
        id: vars
        run: |
          if [ ${{ github.ref }} == "refs/heads/main" ]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
          fi  
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_AUTHTOK }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64/v8

      - name: Push KubeDig images to Docker
        run: GITHUB_SHA=$GITHUB_SHA ./KubeDig/build/push_kubedig.sh ${{ steps.vars.outputs.tag }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@main

      - name: Get Image Digest
        id: digest
        run: |
          echo "imagedigest=$(jq -r '.["containerimage.digest"]' kubedig.json)" >> $GITHUB_OUTPUT
          echo "initdigest=$(jq -r '.["containerimage.digest"]' kubedig-init.json)" >> $GITHUB_OUTPUT
          echo "ubidigest=$(jq -r '.["containerimage.digest"]' kubedig-ubi.json)" >> $GITHUB_OUTPUT

      - name: Sign the Container Images
        run: |
          cosign sign -r kubedig/kubedig@${{ steps.digest.outputs.imagedigest }} --yes
          cosign sign -r kubedig/kubedig-init@${{ steps.digest.outputs.initdigest }} --yes
          cosign sign -r kubedig/kubedig-ubi@${{ steps.digest.outputs.ubidigest }} --yes

  push-stable-version:
    name: Create KubeDig stable release
    needs: [build, check]
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main

      - name: Install regctl
        run: |
          curl -L https://github.com/regclient/regclient/releases/latest/download/regctl-linux-amd64 >regctl
          chmod 755 regctl
          mv regctl /usr/local/bin

      - name: Check install
        run: regctl version

      - name: Get tag
        id: match
        run: |
          value=`cat STABLE-RELEASE`
          if [ ${{ github.ref }} == "refs/heads/$value" ]; then
            echo "tag=true" >> $GITHUB_OUTPUT
          else
            echo "tag=false" >> $GITHUB_OUTPUT
          fi

      - name: Login to Docker Hub
        if: steps.match.outputs.tag == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_AUTHTOK }}

      - name: Generate the stable version of KubeDig in Docker Hub
        if: steps.match.outputs.tag == 'true'
        run: |
          STABLE_VERSION=`cat STABLE-RELEASE`
          regctl image copy kubedig/kubedig:$STABLE_VERSION kubedig/kubedig:stable --digest-tags
          regctl image copy kubedig/kubedig-ubi:$STABLE_VERSION kubedig/kubedig-ubi:stable --digest-tags
          regctl image copy kubedig/kubedig-controller:$STABLE_VERSION kubedig/kubedig-controller:stable --digest-tags

  kubedig-controller-release:
    name: Build & Push KubeDigController
    needs: check
    if: github.repository == 'kubedig/kubedig' && (needs.check.outputs.controller == 'true' || ${{ github.ref }} != 'refs/heads/main')
    defaults:
      run:
        working-directory: ./pkg/KubeDigController
    runs-on: ubuntu-latest-16-cores
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'KubeDig/go.mod'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64/v8

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_AUTHTOK }}

      - name: Get tag
        id: tag
        run: |
          if [ ${{ github.ref }} == "refs/heads/main" ]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
          fi

      - name: Build & Push KubeDigController
        run: make docker-buildx TAG=${{ steps.tag.outputs.tag }}
